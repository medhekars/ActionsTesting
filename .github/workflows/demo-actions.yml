# This is a basic workflow to help you get started with Actions

name: CI



# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  build:
    name: Cache SonarQube packages
    runs-on: self-hosted
    steps:
      - uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
  build:
    name: Cache Maven packages
    runs-on: self-hosted
    steps:
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
  build:
    name: Code Quality Check via SonarQube
    runs-on: self-hosted
    steps:     
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  build:
    name: Build WAR file with Maven
    runs-on: self-hosted
    steps:      
        run: mvn -B package --file pom.xml
  build:
    name: Publish Artifacts to JFROG
    runs-on: self-hosted
    steps:      
        run: mvn deploy -s "D:\Principal-Learnings\apache-maven-3.8.1-bin\apache-maven-3.8.1\conf\settings.xml"
        env:
          auth: ${{ secrets.AUTH }}
          token: ${{ secrets.JFROG_TOKEN }}
          url: ${{ secrets.URL }}
          GITHUB_TOKEN: ${{ github.token }}